# This is a basic workflow to help you get started with Actions

name: Pull request on form receipt

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  repository_dispatch:
    type: form-received

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Set Git metadata
      shell: pwsh
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "${{ github.actor }}"
    
    - name: Add signature
      id: add-signature
      shell: pwsh
      run: |
        $ClientPayload = '${{ toJson(github.event.client_payload) }}' | ConvertFrom-Json;
        $Payload = $ClientPayload.payload;
        $Kind = $ClientPayload.signature_kind;
        $Name = $Payload.name
        $Affil = $Payload.affiliation
        if ("$Affil" -eq "") {
          $ExtendedAffil = "";
        } else {
          $ExtendedAffil = ", $Affil";
        }
        if ($Kind -eq "action") {
            $Branch = "action-plan/${{ github.run_id }}";
            $What = "action plan";
            $Date = Get-Date -Format "yyyy-MM-dd";
            if ("$Name" -eq "") {
              $Name = "Anonymous";
            }
            if ("$Payload.post_permission" -eq "Yes, with my name and affiliation as listed here") {
              $File = "$Date-$Name.md" -replace ' ', '-'; 
            }  else {
              $Name = "Anonymous";
              $File = "$Date-$Name-$(Get-Random).md" -replace ' ', '-'; 
            }
            New-Item "_posts/$File"
            Add-Content -Path "_posts/$File" -Value "---`nlayout: post `ntitle: $Name`'s action plan `ncategories: [action-plan]`nauthor: $Name`n---`n$($Payload.action_plan)`n";
        } else {
            $Branch = "signature/${{ github.run_id }}";
            $What = "signature";
            
            Add-Content -Path _includes/signatories.md -Value "$Name$ExtendedAffil";
        }
        
        Write-Host "::set-output name=branch::$Branch";
        git checkout -b $Branch
        git add .
        git commit -m "Add $What from $Name."
        git push origin $Branch
        
    - name: Open pull request
      uses: repo-sync/pull-request@master
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }}
        source_branch: ${{ steps.add-signature.outputs.branch }}
        pr_title: "Add ${{ github.event.client_payload.signature_kind}} from ${{ github.event.client_payload.payload.name }}."